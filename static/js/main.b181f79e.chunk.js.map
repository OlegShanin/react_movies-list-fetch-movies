{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","title","a","fetch","response","json","Error","FindMovie","addMovie","useState","titleValue","settitleValue","serchError","setSerchError","newMovie","setMovie","findMovie","loadMovies","htmlFor","value","onChange","event","target","handleInputChange","type","id","placeholder","classNames","onClick","App","setMovies","every","film","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b181f79e.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey=46a92da5&t=';\n\nexport const getMovie = async (title: string): Promise<Movie> => {\n  try {\n    const response = await fetch(`${API_URL}${title}`);\n\n    return await response.json();\n  } catch (error) {\n    throw new Error('error');\n  }\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api/api';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [titleValue, settitleValue] = useState('');\n  const [serchError, setSerchError] = useState(false);\n  const [newMovie, setMovie] = useState<Movie>({\n    Poster: '',\n    Title: '',\n    Plot: '',\n    imdbID: '',\n  });\n\n  const findMovie = async (title: string) => {\n    const loadMovies = await getMovie(title);\n\n    if (!loadMovies.imdbID) {\n      setSerchError(true);\n    } else {\n      setSerchError(false);\n    }\n\n    setMovie(loadMovies);\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    settitleValue(event.target.value);\n  };\n\n  const clearSerch = () => {\n    settitleValue('');\n    setMovie({\n      Poster: '',\n      Title: '',\n      Plot: '',\n      imdbID: '',\n    });\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                value={titleValue}\n                onChange={(event) => {\n                  handleInputChange(event);\n                }}\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={classNames('input',\n                  { 'input is-danger': serchError })}\n              />\n            </div>\n          </label>\n          {serchError\n            && (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              onClick={() => {\n                findMovie(titleValue);\n              }}\n              type=\"button\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              onClick={() => {\n                addMovie(newMovie);\n                clearSerch();\n              }}\n              type=\"button\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {newMovie.Title\n          && (\n            <MovieCard movie={newMovie} />\n          )}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\ntype Props = {\n};\n\nexport const App: React.FC<Props> = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    if (movies.every(film => film.imdbID !== movie.imdbID) && movie.imdbID) {\n      setMovies(currentMovies => [...currentMovies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}